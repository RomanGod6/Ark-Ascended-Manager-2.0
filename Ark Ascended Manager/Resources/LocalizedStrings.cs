using System;
using System.Globalization;
using System.Resources;

namespace Ark_Ascended_Manager.Resources
{
    public class LocalizedStrings
    {
        private static ResourceManager _resourceManager = new ResourceManager("Ark_Ascended_Manager.Resources.Resources", typeof(LocalizedStrings).Assembly);

        public string AdminWarning => _resourceManager.GetString("AdminWarning", CultureInfo.CurrentCulture);
        public string ComingSoon => _resourceManager.GetString("ComingSoon", CultureInfo.CurrentCulture);
        public string RunAsAdmin => _resourceManager.GetString("RunAsAdmin", CultureInfo.CurrentCulture);
        public string StartServer => _resourceManager.GetString("StartServer", CultureInfo.CurrentCulture);
        public string StopServer => _resourceManager.GetString("StopServer", CultureInfo.CurrentCulture);
        public string RestartServer => _resourceManager.GetString("RestartServer", CultureInfo.CurrentCulture);
        public string WipeServer => _resourceManager.GetString("WipeServer", CultureInfo.CurrentCulture);
        public string UpdateServer => _resourceManager.GetString("UpdateServer", CultureInfo.CurrentCulture);
        public string DeleteServer => _resourceManager.GetString("DeleteServer", CultureInfo.CurrentCulture);
        public string RestoreBackup => _resourceManager.GetString("RestoreBackup", CultureInfo.CurrentCulture);
        public string OpenServerFolder => _resourceManager.GetString("OpenServerFolder", CultureInfo.CurrentCulture);
        public string OpenRCON => _resourceManager.GetString("OpenRCON", CultureInfo.CurrentCulture);
        public string ConfigSettings => _resourceManager.GetString("ConfigSettings", CultureInfo.CurrentCulture);
        public string SaveConfigSettings => _resourceManager.GetString("SaveConfigSettings", CultureInfo.CurrentCulture);
        public string Search => _resourceManager.GetString("Search", CultureInfo.CurrentCulture);
        public string Administration => _resourceManager.GetString("Administration", CultureInfo.CurrentCulture);
        public string ServerName => _resourceManager.GetString("ServerName", CultureInfo.CurrentCulture);
        public string AdminPassword => _resourceManager.GetString("AdminPassword", CultureInfo.CurrentCulture);
        public string MOTD => _resourceManager.GetString("MOTD", CultureInfo.CurrentCulture);
        public string MOTDInGame => _resourceManager.GetString("MOTDInGame", CultureInfo.CurrentCulture);
        public string MOTDDuration => _resourceManager.GetString("MOTDDuration", CultureInfo.CurrentCulture);
        public string ServerPassword => _resourceManager.GetString("ServerPassword", CultureInfo.CurrentCulture);
        public string Banlist => _resourceManager.GetString("Banlist", CultureInfo.CurrentCulture);
        public string ServerIcon => _resourceManager.GetString("ServerIcon", CultureInfo.CurrentCulture);
        public string CosmeticWhitelistOverride => _resourceManager.GetString("CosmeticWhitelistOverride", CultureInfo.CurrentCulture);
        public string PhotoModeRangeLimit => _resourceManager.GetString("PhotoModeRangeLimit", CultureInfo.CurrentCulture);
        public string SpectatorPassword => _resourceManager.GetString("SpectatorPassword", CultureInfo.CurrentCulture);
        public string AdminLogging => _resourceManager.GetString("AdminLogging", CultureInfo.CurrentCulture);
        public string AutoSavePeriodMinutes => _resourceManager.GetString("AutoSavePeriodMinutes", CultureInfo.CurrentCulture);
        public string DisableStructureDecayPvE => _resourceManager.GetString("DisableStructureDecayPvE", CultureInfo.CurrentCulture);
        public string ItemStackSizeMultiplier => _resourceManager.GetString("ItemStackSizeMultiplier", CultureInfo.CurrentCulture);
        public string ServerAutoForceRespawnWildDinosInterval => _resourceManager.GetString("ServerAutoForceRespawnWildDinosInterval", CultureInfo.CurrentCulture);
        public string NPCNetworkStasisRangeScalePlayerCountStart => _resourceManager.GetString("NPCNetworkStasisRangeScalePlayerCountStart", CultureInfo.CurrentCulture);
        public string NPCNetworkStasisRangeScalePlayerCountEnd => _resourceManager.GetString("NPCNetworkStasisRangeScalePlayerCountEnd", CultureInfo.CurrentCulture);
        public string NPCNetworkStasisRangeScalePercentEnd => _resourceManager.GetString("NPCNetworkStasisRangeScalePercentEnd", CultureInfo.CurrentCulture);
        public string ForceFlyerExplosives => _resourceManager.GetString("ForceFlyerExplosives", CultureInfo.CurrentCulture);
        public string EnableExtraStructurePreventionVolumes => _resourceManager.GetString("EnableExtraStructurePreventionVolumes", CultureInfo.CurrentCulture);
        public string ShowFloatingDamageText => _resourceManager.GetString("ShowFloatingDamageText", CultureInfo.CurrentCulture);
        public string AllowHitMarkers => _resourceManager.GetString("AllowHitMarkers", CultureInfo.CurrentCulture);
        public string ServerPvE => _resourceManager.GetString("ServerPvE", CultureInfo.CurrentCulture);
        public string DisablePhotoMode => _resourceManager.GetString("DisablePhotoMode", CultureInfo.CurrentCulture);
        public string PreventSpawnAnimations => _resourceManager.GetString("PreventSpawnAnimations", CultureInfo.CurrentCulture);
        public string CryopodSettings => _resourceManager.GetString("CryopodSettings", CultureInfo.CurrentCulture);
        public string DisableCryopodEnemyCheck => _resourceManager.GetString("DisableCryopodEnemyCheck", CultureInfo.CurrentCulture);
        public string DisableCryopodFridgeRequirement => _resourceManager.GetString("DisableCryopodFridgeRequirement", CultureInfo.CurrentCulture);
        public string AllowCryoFridgeOnSaddle => _resourceManager.GetString("AllowCryoFridgeOnSaddle", CultureInfo.CurrentCulture);
        public string DestroyTamesOverTheSoftTameLimit => _resourceManager.GetString("DestroyTamesOverTheSoftTameLimit", CultureInfo.CurrentCulture);
        public string MaxTamedDinosSoftTameLimit => _resourceManager.GetString("MaxTamedDinosSoftTameLimit", CultureInfo.CurrentCulture);
        public string MaxTamedDinosSoftTameLimitCountdownForDeletionDuration => _resourceManager.GetString("MaxTamedDinosSoftTameLimitCountdownForDeletionDuration", CultureInfo.CurrentCulture);
        public string Rules => _resourceManager.GetString("Rules", CultureInfo.CurrentCulture);
        public string ClusterOptions => _resourceManager.GetString("ClusterOptions", CultureInfo.CurrentCulture);
        public string NoTributeDownloads => _resourceManager.GetString("NoTributeDownloads", CultureInfo.CurrentCulture);
        public string PreventDownloadSurvivors => _resourceManager.GetString("PreventDownloadSurvivors", CultureInfo.CurrentCulture);
        public string PreventDownloadItems => _resourceManager.GetString("PreventDownloadItems", CultureInfo.CurrentCulture);
        public string PreventDownloadDinos => _resourceManager.GetString("PreventDownloadDinos", CultureInfo.CurrentCulture);
        public string TributeCharacterExpirationSeconds => _resourceManager.GetString("TributeCharacterExpirationSeconds", CultureInfo.CurrentCulture);
        public string TributeDinoExpirationSeconds => _resourceManager.GetString("TributeDinoExpirationSeconds", CultureInfo.CurrentCulture);
        public string TributeItemExpirationSeconds => _resourceManager.GetString("TributeItemExpirationSeconds", CultureInfo.CurrentCulture);
        public string EnableHardcoreMode => _resourceManager.GetString("EnableHardcoreMode", CultureInfo.CurrentCulture);
        public string DisablePvPFriendlyFire => _resourceManager.GetString("DisablePvPFriendlyFire", CultureInfo.CurrentCulture);
        public string DisablePvEFriendlyFire => _resourceManager.GetString("DisablePvEFriendlyFire", CultureInfo.CurrentCulture);
        public string DisableLootCrates => _resourceManager.GetString("DisableLootCrates", CultureInfo.CurrentCulture);
        public string AllowCaveBuildingPvE => _resourceManager.GetString("AllowCaveBuildingPvE", CultureInfo.CurrentCulture);
        public string AllowCaveBuildingPvP => _resourceManager.GetString("AllowCaveBuildingPvP", CultureInfo.CurrentCulture);
        public string EnableSingleplayerSettings => _resourceManager.GetString("EnableSingleplayerSettings", CultureInfo.CurrentCulture);
        public string AllowCrateSpawnsOnTopOfStructures => _resourceManager.GetString("AllowCrateSpawnsOnTopOfStructures", CultureInfo.CurrentCulture);
        public string EnableCreativeMode => _resourceManager.GetString("EnableCreativeMode", CultureInfo.CurrentCulture);
        public string EnableDiseases => _resourceManager.GetString("EnableDiseases", CultureInfo.CurrentCulture);
        public string NonPermanentDiseases => _resourceManager.GetString("NonPermanentDiseases", CultureInfo.CurrentCulture);
        public string RandomSupplyCratePoints => _resourceManager.GetString("RandomSupplyCratePoints", CultureInfo.CurrentCulture);
        public string SupplyCrateLootQualityMultiplier => _resourceManager.GetString("SupplyCrateLootQualityMultiplier", CultureInfo.CurrentCulture);
        public string FishingLootQualityMultiplier => _resourceManager.GetString("FishingLootQualityMultiplier", CultureInfo.CurrentCulture);
        public string AllowUnlimitedRespec => _resourceManager.GetString("AllowUnlimitedRespec", CultureInfo.CurrentCulture);
        public string AllowPlatformSaddleMultiFloors => _resourceManager.GetString("AllowPlatformSaddleMultiFloors", CultureInfo.CurrentCulture);
        public string MaxPlatformSaddleStructureLimit => _resourceManager.GetString("MaxPlatformSaddleStructureLimit", CultureInfo.CurrentCulture);
        public string MaxDifficulty => _resourceManager.GetString("MaxDifficulty", CultureInfo.CurrentCulture);
        public string IncreasePvPRespawnIntervalCheckPeriod => _resourceManager.GetString("IncreasePvPRespawnIntervalCheckPeriod", CultureInfo.CurrentCulture);
        public string IncreasePvPRespawnIntervalMultiplier => _resourceManager.GetString("IncreasePvPRespawnIntervalMultiplier", CultureInfo.CurrentCulture);
        public string IncreasePvPRespawnIntervalBaseAmount => _resourceManager.GetString("IncreasePvPRespawnIntervalBaseAmount", CultureInfo.CurrentCulture);
        public string MaxAlliancesPerTribe => _resourceManager.GetString("MaxAlliancesPerTribe", CultureInfo.CurrentCulture);
        public string MaxTribesPerAlliance => _resourceManager.GetString("MaxTribesPerAlliance", CultureInfo.CurrentCulture);
        public string IncreasePvPRespawnInterval => _resourceManager.GetString("IncreasePvPRespawnInterval", CultureInfo.CurrentCulture);
        public string PreventOfflinePvPInterval => _resourceManager.GetString("PreventOfflinePvPInterval", CultureInfo.CurrentCulture);
        public string PreventOfflinePvP => _resourceManager.GetString("PreventOfflinePvP", CultureInfo.CurrentCulture);
        public string AutoPvEStartTimeSeconds => _resourceManager.GetString("AutoPvEStartTimeSeconds", CultureInfo.CurrentCulture);
        public string AutoPvEStopTimeSeconds => _resourceManager.GetString("AutoPvEStopTimeSeconds", CultureInfo.CurrentCulture);
        public string MaxNumberOfPlayersInTribe => _resourceManager.GetString("MaxNumberOfPlayersInTribe", CultureInfo.CurrentCulture);
        public string TribeNameChangeCooldown => _resourceManager.GetString("TribeNameChangeCooldown", CultureInfo.CurrentCulture);
        public string TribeSlotReuseCooldown => _resourceManager.GetString("TribeSlotReuseCooldown", CultureInfo.CurrentCulture);
        public string PvETribeWarfareOptions => _resourceManager.GetString("PvETribeWarfareOptions", CultureInfo.CurrentCulture);
        public string PvEAllowTribeWar => _resourceManager.GetString("PvEAllowTribeWar", CultureInfo.CurrentCulture);
        public string PvEAllowTribeWarCancel => _resourceManager.GetString("PvEAllowTribeWarCancel", CultureInfo.CurrentCulture);
        public string AllowCustomRecipes => _resourceManager.GetString("AllowCustomRecipes", CultureInfo.CurrentCulture);
        public string CustomRecipeEffectivenessMultiplier => _resourceManager.GetString("CustomRecipeEffectivenessMultiplier", CultureInfo.CurrentCulture);
        public string CustomRecipeSkillMultiplier => _resourceManager.GetString("CustomRecipeSkillMultiplier", CultureInfo.CurrentCulture);
        public string OxygenSwimSpeedStatMultiplier => _resourceManager.GetString("OxygenSwimSpeedStatMultiplier", CultureInfo.CurrentCulture);
        public string UseCorpseLocator => _resourceManager.GetString("UseCorpseLocator", CultureInfo.CurrentCulture);
        public string FuelConsumptionIntervalMultiplier => _resourceManager.GetString("FuelConsumptionIntervalMultiplier", CultureInfo.CurrentCulture);
        public string ChatAndNotifications => _resourceManager.GetString("ChatAndNotifications", CultureInfo.CurrentCulture);
        public string AlwaysNotifyPlayerJoined => _resourceManager.GetString("AlwaysNotifyPlayerJoined", CultureInfo.CurrentCulture);
        public string AlwaysNotifyPlayerLeft => _resourceManager.GetString("AlwaysNotifyPlayerLeft", CultureInfo.CurrentCulture);
        public string GlobalVoiceChat => _resourceManager.GetString("GlobalVoiceChat", CultureInfo.CurrentCulture);
        public string ProximityChat => _resourceManager.GetString("ProximityChat", CultureInfo.CurrentCulture);
        public string HUDAndVisuals => _resourceManager.GetString("HUDAndVisuals", CultureInfo.CurrentCulture);
        public string ServerCrosshair => _resourceManager.GetString("ServerCrosshair", CultureInfo.CurrentCulture);
        public string ServerForceNoHud => _resourceManager.GetString("ServerForceNoHud", CultureInfo.CurrentCulture);
        public string ShowMapPlayerLocation => _resourceManager.GetString("ShowMapPlayerLocation", CultureInfo.CurrentCulture);
        public string AllowThirdPersonPlayer => _resourceManager.GetString("AllowThirdPersonPlayer", CultureInfo.CurrentCulture);
        public string EnablePVPGamma => _resourceManager.GetString("EnablePVPGamma", CultureInfo.CurrentCulture);
        public string EnablePVEGamma => _resourceManager.GetString("EnablePVEGamma", CultureInfo.CurrentCulture);
        public string PlayerSettings => _resourceManager.GetString("PlayerSettings", CultureInfo.CurrentCulture);
        public string XPMultiplier => _resourceManager.GetString("XPMultiplier", CultureInfo.CurrentCulture);
        public string GenericXPMultiplier => _resourceManager.GetString("GenericXPMultiplier", CultureInfo.CurrentCulture);
        public string PlayerDamageMultiplier => _resourceManager.GetString("PlayerDamageMultiplier", CultureInfo.CurrentCulture);
        public string PlayerResistanceMultiplier => _resourceManager.GetString("PlayerResistanceMultiplier", CultureInfo.CurrentCulture);
        public string PlayerCharacterFoodDrainMultiplier => _resourceManager.GetString("PlayerCharacterFoodDrainMultiplier", CultureInfo.CurrentCulture);
        public string PlayerCharacterWaterDrainMultiplier => _resourceManager.GetString("PlayerCharacterWaterDrainMultiplier", CultureInfo.CurrentCulture);
        public string PlayerCharacterStaminaDrainMultiplier => _resourceManager.GetString("PlayerCharacterStaminaDrainMultiplier", CultureInfo.CurrentCulture);
        public string MaxFallSpeedMultiplier => _resourceManager.GetString("MaxFallSpeedMultiplier", CultureInfo.CurrentCulture);
        public string PlayerHealthRecoveryMultiplier => _resourceManager.GetString("PlayerHealthRecoveryMultiplier", CultureInfo.CurrentCulture);
        public string AllowFlyerCarryPvE => _resourceManager.GetString("AllowFlyerCarryPvE", CultureInfo.CurrentCulture);
        public string PlayerHarvestingDamageMultiplier => _resourceManager.GetString("PlayerHarvestingDamageMultiplier", CultureInfo.CurrentCulture);
        public string CraftingSkillBonusMultiplier => _resourceManager.GetString("CraftingSkillBonusMultiplier", CultureInfo.CurrentCulture);
        public string PlayerStatMultiplier => _resourceManager.GetString("PlayerStatMultiplier", CultureInfo.CurrentCulture);
        public string PlayerBaseStatMultiplier => _resourceManager.GetString("PlayerBaseStatMultiplier", CultureInfo.CurrentCulture);
        public string BaseStatMultiplier => _resourceManager.GetString("BaseStatMultiplier", CultureInfo.CurrentCulture);
        public string PlayerBaseHealth => _resourceManager.GetString("PlayerBaseHealth", CultureInfo.CurrentCulture);
        public string PlayerBaseStamina => _resourceManager.GetString("PlayerBaseStamina", CultureInfo.CurrentCulture);
        public string PlayerBaseTorpor => _resourceManager.GetString("PlayerBaseTorpor", CultureInfo.CurrentCulture);
        public string PlayerBaseOxygen => _resourceManager.GetString("PlayerBaseOxygen", CultureInfo.CurrentCulture);
        public string PlayerBaseFood => _resourceManager.GetString("PlayerBaseFood", CultureInfo.CurrentCulture);
        public string PlayerBaseWater => _resourceManager.GetString("PlayerBaseWater", CultureInfo.CurrentCulture);
        public string PlayerBaseTemperature => _resourceManager.GetString("PlayerBaseTemperature", CultureInfo.CurrentCulture);
        public string PlayerBaseWeight => _resourceManager.GetString("PlayerBaseWeight", CultureInfo.CurrentCulture);
        public string PerLevelStatMultiplier => _resourceManager.GetString("PerLevelStatMultiplier", CultureInfo.CurrentCulture);
        public string PlayerHealth => _resourceManager.GetString("PlayerHealth", CultureInfo.CurrentCulture);
        public string PlayerStamina => _resourceManager.GetString("PlayerStamina", CultureInfo.CurrentCulture);
        public string PlayerTorpor => _resourceManager.GetString("PlayerTorpor", CultureInfo.CurrentCulture);
        public string PlayerOxygen => _resourceManager.GetString("PlayerOxygen", CultureInfo.CurrentCulture);
        public string PlayerFood => _resourceManager.GetString("PlayerFood", CultureInfo.CurrentCulture);
        public string PlayerWater => _resourceManager.GetString("PlayerWater", CultureInfo.CurrentCulture);
        public string PlayerTemperature => _resourceManager.GetString("PlayerTemperature", CultureInfo.CurrentCulture);
        public string PlayerWeight => _resourceManager.GetString("PlayerWeight", CultureInfo.CurrentCulture);
        public string PlayerMeleeDamage => _resourceManager.GetString("PlayerMeleeDamage", CultureInfo.CurrentCulture);
        public string PlayerMovementSpeed => _resourceManager.GetString("PlayerMovementSpeed", CultureInfo.CurrentCulture);
        public string PlayerFortitude => _resourceManager.GetString("PlayerFortitude", CultureInfo.CurrentCulture);
        public string PlayerCrafting => _resourceManager.GetString("PlayerCrafting", CultureInfo.CurrentCulture);
        public string DinoSettings => _resourceManager.GetString("DinoSettings", CultureInfo.CurrentCulture);
        public string MaxTamedDinos => _resourceManager.GetString("MaxTamedDinos", CultureInfo.CurrentCulture);
        public string MaxPersonalTamedDinos => _resourceManager.GetString("MaxPersonalTamedDinos", CultureInfo.CurrentCulture);
        public string TamedDinoDamageMultiplier => _resourceManager.GetString("TamedDinoDamageMultiplier", CultureInfo.CurrentCulture);
        public string DinoWildDamageMultiplier => _resourceManager.GetString("DinoWildDamageMultiplier", CultureInfo.CurrentCulture);
        public string TamedDinoResistanceMultiplier => _resourceManager.GetString("TamedDinoResistanceMultiplier", CultureInfo.CurrentCulture);
        public string DinoResistanceMultiplier => _resourceManager.GetString("DinoResistanceMultiplier", CultureInfo.CurrentCulture);
        public string PersonalTamedDinosSaddleStructureCost => _resourceManager.GetString("PersonalTamedDinosSaddleStructureCost", CultureInfo.CurrentCulture);
        public string DinoHarvestingDamageMultiplier => _resourceManager.GetString("DinoHarvestingDamageMultiplier", CultureInfo.CurrentCulture);
        public string DinoTurretDamageMultiplier => _resourceManager.GetString("DinoTurretDamageMultiplier", CultureInfo.CurrentCulture);
        public string RaidDinoCharacterFoodDrainMultiplier => _resourceManager.GetString("RaidDinoCharacterFoodDrainMultiplier", CultureInfo.CurrentCulture);
        public string DisableDinoDecayPvE => _resourceManager.GetString("DisableDinoDecayPvE", CultureInfo.CurrentCulture);
        public string AllowFlyingStaminaRecovery => _resourceManager.GetString("AllowFlyingStaminaRecovery", CultureInfo.CurrentCulture);
        public string AllowMultipleAttachedC4 => _resourceManager.GetString("AllowMultipleAttachedC4", CultureInfo.CurrentCulture);
        public string BPvPDinoDecay => _resourceManager.GetString("BPvPDinoDecay", CultureInfo.CurrentCulture);
        public string PvEDinoDecayPeriodMultiplier => _resourceManager.GetString("PvEDinoDecayPeriodMultiplier", CultureInfo.CurrentCulture);
        public string AllowFlyerSpeedLeveling => _resourceManager.GetString("AllowFlyerSpeedLeveling", CultureInfo.CurrentCulture);
        public string AutoDestroyDecayedDinos => _resourceManager.GetString("AutoDestroyDecayedDinos", CultureInfo.CurrentCulture);
        public string DisableDinoTaming => _resourceManager.GetString("DisableDinoTaming", CultureInfo.CurrentCulture);
        public string TamedDinoCharacterFoodDrainMultiplier => _resourceManager.GetString("TamedDinoCharacterFoodDrainMultiplier", CultureInfo.CurrentCulture);
        public string WildDinoCharacterFoodDrainMultiplier => _resourceManager.GetString("WildDinoCharacterFoodDrainMultiplier", CultureInfo.CurrentCulture);
        public string WildDinoTorporDrainMultiplier => _resourceManager.GetString("WildDinoTorporDrainMultiplier", CultureInfo.CurrentCulture);
        public string TamedDinoTorporDrainMultiplier => _resourceManager.GetString("TamedDinoTorporDrainMultiplier", CultureInfo.CurrentCulture);
        public string PassiveTameIntervalMultiplier => _resourceManager.GetString("PassiveTameIntervalMultiplier", CultureInfo.CurrentCulture);
        public string DinoCharacterHealthRecoveryMultiplier => _resourceManager.GetString("DinoCharacterHealthRecoveryMultiplier", CultureInfo.CurrentCulture);
        public string DinoCharacterStaminaDrainMultiplier => _resourceManager.GetString("DinoCharacterStaminaDrainMultiplier", CultureInfo.CurrentCulture);
        public string ForceAllowCaveFlyers => _resourceManager.GetString("ForceAllowCaveFlyers", CultureInfo.CurrentCulture);
        public string PreventMateBoost => _resourceManager.GetString("PreventMateBoost", CultureInfo.CurrentCulture);
        public string AllowUnclaimDinos => _resourceManager.GetString("AllowUnclaimDinos", CultureInfo.CurrentCulture);
        public string DisableDinoBreeding => _resourceManager.GetString("DisableDinoBreeding", CultureInfo.CurrentCulture);
        public string DisableDinoRiding => _resourceManager.GetString("DisableDinoRiding", CultureInfo.CurrentCulture);
        public string DinoStatMultipliers => _resourceManager.GetString("DinoStatMultipliers", CultureInfo.CurrentCulture);
        public string DinoTamedStatMultipliers => _resourceManager.GetString("DinoTamedStatMultipliers", CultureInfo.CurrentCulture);
        public string DinoTamedHealth => _resourceManager.GetString("DinoTamedHealth", CultureInfo.CurrentCulture);
        public string DinoTamedStamina => _resourceManager.GetString("DinoTamedStamina", CultureInfo.CurrentCulture);
        public string DinoTamedTorpor => _resourceManager.GetString("DinoTamedTorpor", CultureInfo.CurrentCulture);
        public string DinoTamedOxygen => _resourceManager.GetString("DinoTamedOxygen", CultureInfo.CurrentCulture);
        public string DinoTamedFood => _resourceManager.GetString("DinoTamedFood", CultureInfo.CurrentCulture);
        public string DinoTamedWeight => _resourceManager.GetString("DinoTamedWeight", CultureInfo.CurrentCulture);
        public string DinoTamedMeleeDamage => _resourceManager.GetString("DinoTamedMeleeDamage", CultureInfo.CurrentCulture);
        public string DinoTamedMovementSpeed => _resourceManager.GetString("DinoTamedMovementSpeed", CultureInfo.CurrentCulture);
        public string DinoTamedAddStatMultipliers => _resourceManager.GetString("DinoTamedAddStatMultipliers", CultureInfo.CurrentCulture);
        public string DinoTamedAddHealth => _resourceManager.GetString("DinoTamedAddHealth", CultureInfo.CurrentCulture);
        public string DinoTamedAddStamina => _resourceManager.GetString("DinoTamedAddStamina", CultureInfo.CurrentCulture);
        public string DinoTamedAddTorpor => _resourceManager.GetString("DinoTamedAddTorpor", CultureInfo.CurrentCulture);
        public string DinoTamedAddOxygen => _resourceManager.GetString("DinoTamedAddOxygen", CultureInfo.CurrentCulture);
        public string DinoTamedAddFood => _resourceManager.GetString("DinoTamedAddFood", CultureInfo.CurrentCulture);
        public string DinoTamedAddWeight => _resourceManager.GetString("DinoTamedAddWeight", CultureInfo.CurrentCulture);
        public string DinoTamedAddMeleeDamage => _resourceManager.GetString("DinoTamedAddMeleeDamage", CultureInfo.CurrentCulture);
        public string DinoTamedAddMovementSpeed => _resourceManager.GetString("DinoTamedAddMovementSpeed", CultureInfo.CurrentCulture);
        public string DinoAffinityStatMultipliers => _resourceManager.GetString("DinoAffinityStatMultipliers", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityHealth => _resourceManager.GetString("DinoTamedAffinityHealth", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityStamina => _resourceManager.GetString("DinoTamedAffinityStamina", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityTorpor => _resourceManager.GetString("DinoTamedAffinityTorpor", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityOxygen => _resourceManager.GetString("DinoTamedAffinityOxygen", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityFood => _resourceManager.GetString("DinoTamedAffinityFood", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityWeight => _resourceManager.GetString("DinoTamedAffinityWeight", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityMeleeDamage => _resourceManager.GetString("DinoTamedAffinityMeleeDamage", CultureInfo.CurrentCulture);
        public string DinoTamedAffinityMovementSpeed => _resourceManager.GetString("DinoTamedAffinityMovementSpeed", CultureInfo.CurrentCulture);
        public string DinoWildStatMultipliers => _resourceManager.GetString("DinoWildStatMultipliers", CultureInfo.CurrentCulture);
        public string DinoWildHealth => _resourceManager.GetString("DinoWildHealth", CultureInfo.CurrentCulture);
        public string DinoWildStamina => _resourceManager.GetString("DinoWildStamina", CultureInfo.CurrentCulture);
        public string DinoWildTorpor => _resourceManager.GetString("DinoWildTorpor", CultureInfo.CurrentCulture);
        public string DinoWildOxygen => _resourceManager.GetString("DinoWildOxygen", CultureInfo.CurrentCulture);
        public string DinoWildFood => _resourceManager.GetString("DinoWildFood", CultureInfo.CurrentCulture);
        public string DinoWildWeight => _resourceManager.GetString("DinoWildWeight", CultureInfo.CurrentCulture);
        public string DinoWildMeleeDamage => _resourceManager.GetString("DinoWildMeleeDamage", CultureInfo.CurrentCulture);
        public string DinoWildMovementSpeed => _resourceManager.GetString("DinoWildMovementSpeed", CultureInfo.CurrentCulture);
        public string DinoBreedingSettings => _resourceManager.GetString("DinoBreedingSettings", CultureInfo.CurrentCulture);
        public string MatingIntervalMultiplier => _resourceManager.GetString("MatingIntervalMultiplier", CultureInfo.CurrentCulture);
        public string EggHatchSpeedMultiplier => _resourceManager.GetString("EggHatchSpeedMultiplier", CultureInfo.CurrentCulture);
        public string MatingSpeedMultiplier => _resourceManager.GetString("MatingSpeedMultiplier", CultureInfo.CurrentCulture);
        public string BabyImprintAmountMultiplier => _resourceManager.GetString("BabyImprintAmountMultiplier", CultureInfo.CurrentCulture);
        public string BabyMatureSpeedMultiplier => _resourceManager.GetString("BabyMatureSpeedMultiplier", CultureInfo.CurrentCulture);
        public string BabyFoodConsumptionSpeedMultiplier => _resourceManager.GetString("BabyFoodConsumptionSpeedMultiplier", CultureInfo.CurrentCulture);
        public string DisableImprintDinoBuff => _resourceManager.GetString("DisableImprintDinoBuff", CultureInfo.CurrentCulture);
        public string AllowAnyoneBabyImprintCuddle => _resourceManager.GetString("AllowAnyoneBabyImprintCuddle", CultureInfo.CurrentCulture);
        public string BabyImprintingStatScaleMultiplier => _resourceManager.GetString("BabyImprintingStatScaleMultiplier", CultureInfo.CurrentCulture);
        public string BabyCuddleIntervalMultiplier => _resourceManager.GetString("BabyCuddleIntervalMultiplier", CultureInfo.CurrentCulture);
        public string BabyCuddleGracePeriodMultiplier => _resourceManager.GetString("BabyCuddleGracePeriodMultiplier", CultureInfo.CurrentCulture);
        public string BabyCuddleLoseImprintQualitySpeedMultiplier => _resourceManager.GetString("BabyCuddleLoseImprintQualitySpeedMultiplier", CultureInfo.CurrentCulture);
        public string Enviroment => _resourceManager.GetString("Enviroment", CultureInfo.CurrentCulture);
        public string TamingSpeedMultiplier => _resourceManager.GetString("TamingSpeedMultiplier", CultureInfo.CurrentCulture);
        public string TamingSpeedMultiplier_Tooltip => _resourceManager.GetString("TamingSpeedMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string HarvestAmountMultiplier => _resourceManager.GetString("HarvestAmountMultiplier", CultureInfo.CurrentCulture);
        public string HarvestAmountMultiplier_Tooltip => _resourceManager.GetString("HarvestAmountMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string HairGrowthSpeedMultiplier => _resourceManager.GetString("HairGrowthSpeedMultiplier", CultureInfo.CurrentCulture);
        public string HairGrowthSpeedMultiplier_Tooltip => _resourceManager.GetString("HairGrowthSpeedMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string ResourcesRespawnPeriodMultiplier => _resourceManager.GetString("ResourcesRespawnPeriodMultiplier", CultureInfo.CurrentCulture);
        public string ResourcesRespawnPeriodMultiplier_Tooltip => _resourceManager.GetString("ResourcesRespawnPeriodMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string DinoCountMultiplier => _resourceManager.GetString("DinoCountMultiplier", CultureInfo.CurrentCulture);
        public string DinoCountMultiplier_Tooltip => _resourceManager.GetString("DinoCountMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string BaseTemperatureMultiplier => _resourceManager.GetString("BaseTemperatureMultiplier", CultureInfo.CurrentCulture);
        public string BaseTemperatureMultiplier_Tooltip => _resourceManager.GetString("BaseTemperatureMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string DayCycleSpeedScale => _resourceManager.GetString("DayCycleSpeedScale", CultureInfo.CurrentCulture);
        public string DayCycleSpeedScale_Tooltip => _resourceManager.GetString("DayCycleSpeedScale_Tooltip", CultureInfo.CurrentCulture);
        public string DayTimeSpeedScale => _resourceManager.GetString("DayTimeSpeedScale", CultureInfo.CurrentCulture);
        public string DayTimeSpeedScale_Tooltip => _resourceManager.GetString("DayTimeSpeedScale_Tooltip", CultureInfo.CurrentCulture);
        public string NightTimeSpeedScale => _resourceManager.GetString("NightTimeSpeedScale", CultureInfo.CurrentCulture);
        public string NightTimeSpeedScale_Tooltip => _resourceManager.GetString("NightTimeSpeedScale_Tooltip", CultureInfo.CurrentCulture);
        public string HarvestHealthMultiplier => _resourceManager.GetString("HarvestHealthMultiplier", CultureInfo.CurrentCulture);
        public string HarvestHealthMultiplier_Tooltip => _resourceManager.GetString("HarvestHealthMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string ResourceNoReplenishRadiusPlayers => _resourceManager.GetString("ResourceNoReplenishRadiusPlayers", CultureInfo.CurrentCulture);
        public string ResourceNoReplenishRadiusPlayers_Tooltip => _resourceManager.GetString("ResourceNoReplenishRadiusPlayers_Tooltip", CultureInfo.CurrentCulture);
        public string ResourceNoReplenishRadiusStructures => _resourceManager.GetString("ResourceNoReplenishRadiusStructures", CultureInfo.CurrentCulture);
        public string ResourceNoReplenishRadiusStructures_Tooltip => _resourceManager.GetString("ResourceNoReplenishRadiusStructures_Tooltip", CultureInfo.CurrentCulture);
        public string UseOptimizedHarvestingHealth => _resourceManager.GetString("UseOptimizedHarvestingHealth", CultureInfo.CurrentCulture);
        public string UseOptimizedHarvestingHealth_Tooltip => _resourceManager.GetString("UseOptimizedHarvestingHealth_Tooltip", CultureInfo.CurrentCulture);
        public string ClampResourceHarvestDamage => _resourceManager.GetString("ClampResourceHarvestDamage", CultureInfo.CurrentCulture);
        public string ClampResourceHarvestDamage_Tooltip => _resourceManager.GetString("ClampResourceHarvestDamage_Tooltip", CultureInfo.CurrentCulture);
        public string DisableWeatherFog => _resourceManager.GetString("DisableWeatherFog", CultureInfo.CurrentCulture);
        public string DisableWeatherFog_Tooltip => _resourceManager.GetString("DisableWeatherFog_Tooltip", CultureInfo.CurrentCulture);
        public string GlobalSpoilingTimeMultiplier => _resourceManager.GetString("GlobalSpoilingTimeMultiplier", CultureInfo.CurrentCulture);
        public string GlobalSpoilingTimeMultiplier_Tooltip => _resourceManager.GetString("GlobalSpoilingTimeMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string ClampItemSpoilingTimes => _resourceManager.GetString("ClampItemSpoilingTimes", CultureInfo.CurrentCulture);
        public string ClampItemSpoilingTimes_Tooltip => _resourceManager.GetString("ClampItemSpoilingTimes_Tooltip", CultureInfo.CurrentCulture);
        public string GlobalItemDecompositionTimeMultiplier => _resourceManager.GetString("GlobalItemDecompositionTimeMultiplier", CultureInfo.CurrentCulture);
        public string GlobalItemDecompositionTimeMultiplier_Tooltip => _resourceManager.GetString("GlobalItemDecompositionTimeMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string GlobalCorpseDecompositionTimeMultiplier => _resourceManager.GetString("GlobalCorpseDecompositionTimeMultiplier", CultureInfo.CurrentCulture);
        public string GlobalCorpseDecompositionTimeMultiplier_Tooltip => _resourceManager.GetString("GlobalCorpseDecompositionTimeMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string CropGrowthSpeedMultiplier => _resourceManager.GetString("CropGrowthSpeedMultiplier", CultureInfo.CurrentCulture);
        public string CropGrowthSpeedMultiplier_Tooltip => _resourceManager.GetString("CropGrowthSpeedMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string CropDecaySpeedMultiplier => _resourceManager.GetString("CropDecaySpeedMultiplier", CultureInfo.CurrentCulture);
        public string CropDecaySpeedMultiplier_Tooltip => _resourceManager.GetString("CropDecaySpeedMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string LayEggIntervalMultiplier => _resourceManager.GetString("LayEggIntervalMultiplier", CultureInfo.CurrentCulture);
        public string LayEggIntervalMultiplier_Tooltip => _resourceManager.GetString("LayEggIntervalMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string PoopIntervalMultiplier => _resourceManager.GetString("PoopIntervalMultiplier", CultureInfo.CurrentCulture);
        public string PoopIntervalMultiplier_Tooltip => _resourceManager.GetString("PoopIntervalMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string KillXPMultiplier => _resourceManager.GetString("KillXPMultiplier", CultureInfo.CurrentCulture);
        public string KillXPMultiplier_Tooltip => _resourceManager.GetString("KillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string HarvestXPMultiplier => _resourceManager.GetString("HarvestXPMultiplier", CultureInfo.CurrentCulture);
        public string HarvestXPMultiplier_Tooltip => _resourceManager.GetString("HarvestXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string CraftXPMultiplier => _resourceManager.GetString("CraftXPMultiplier", CultureInfo.CurrentCulture);
        public string CraftXPMultiplier_Tooltip => _resourceManager.GetString("CraftXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string SpecialXPMultiplier => _resourceManager.GetString("SpecialXPMultiplier", CultureInfo.CurrentCulture);
        public string SpecialXPMultiplier_Tooltip => _resourceManager.GetString("SpecialXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string ExplorerNoteXPMultiplier => _resourceManager.GetString("ExplorerNoteXPMultiplier", CultureInfo.CurrentCulture);
        public string ExplorerNoteXPMultiplier_Tooltip => _resourceManager.GetString("ExplorerNoteXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string BossKillXPMultiplier => _resourceManager.GetString("BossKillXPMultiplier", CultureInfo.CurrentCulture);
        public string BossKillXPMultiplier_Tooltip => _resourceManager.GetString("BossKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string AlphaKillXPMultiplier => _resourceManager.GetString("AlphaKillXPMultiplier", CultureInfo.CurrentCulture);
        public string AlphaKillXPMultiplier_Tooltip => _resourceManager.GetString("AlphaKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string WildKillXPMultiplier => _resourceManager.GetString("WildKillXPMultiplier", CultureInfo.CurrentCulture);
        public string WildKillXPMultiplier_Tooltip => _resourceManager.GetString("WildKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string CaveKillXPMultiplier => _resourceManager.GetString("CaveKillXPMultiplier", CultureInfo.CurrentCulture);
        public string CaveKillXPMultiplier_Tooltip => _resourceManager.GetString("CaveKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string TamedKillXPMultiplier => _resourceManager.GetString("TamedKillXPMultiplier", CultureInfo.CurrentCulture);
        public string TamedKillXPMultiplier_Tooltip => _resourceManager.GetString("TamedKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string UnclaimedKillXPMultiplier => _resourceManager.GetString("UnclaimedKillXPMultiplier", CultureInfo.CurrentCulture);
        public string UnclaimedKillXPMultiplier_Tooltip => _resourceManager.GetString("UnclaimedKillXPMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string Structures => _resourceManager.GetString("Structures", CultureInfo.CurrentCulture);
        public string DisableStructurePlacementCollision => _resourceManager.GetString("DisableStructurePlacementCollision", CultureInfo.CurrentCulture);
        public string DisableStructurePlacementCollision_Tooltip => _resourceManager.GetString("DisableStructurePlacementCollision_Tooltip", CultureInfo.CurrentCulture);
        public string StructureDamageRepairCooldown => _resourceManager.GetString("StructureDamageRepairCooldown", CultureInfo.CurrentCulture);
        public string StructureDamageRepairCooldown_Tooltip => _resourceManager.GetString("StructureDamageRepairCooldown_Tooltip", CultureInfo.CurrentCulture);
        public string EnablePvPStructureDecay => _resourceManager.GetString("EnablePvPStructureDecay", CultureInfo.CurrentCulture);
        public string EnablePvPStructureDecay_Tooltip => _resourceManager.GetString("EnablePvPStructureDecay_Tooltip", CultureInfo.CurrentCulture);
        public string PvPZoneStructureDamageMultiplier => _resourceManager.GetString("PvPZoneStructureDamageMultiplier", CultureInfo.CurrentCulture);
        public string PvPZoneStructureDamageMultiplier_Tooltip => _resourceManager.GetString("PvPZoneStructureDamageMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string StructureResistanceMultiplier => _resourceManager.GetString("StructureResistanceMultiplier", CultureInfo.CurrentCulture);
        public string StructureResistanceMultiplier_Tooltip => _resourceManager.GetString("StructureResistanceMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string StructureDamageMultiplier => _resourceManager.GetString("StructureDamageMultiplier", CultureInfo.CurrentCulture);
        public string StructureDamageMultiplier_Tooltip => _resourceManager.GetString("StructureDamageMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string MaxStructuresInRange => _resourceManager.GetString("MaxStructuresInRange", CultureInfo.CurrentCulture);
        public string MaxStructuresInRange_Tooltip => _resourceManager.GetString("MaxStructuresInRange_Tooltip", CultureInfo.CurrentCulture);
        public string PerPlatformMaxStructuresMultiplier => _resourceManager.GetString("PerPlatformMaxStructuresMultiplier", CultureInfo.CurrentCulture);
        public string PerPlatformMaxStructuresMultiplier_Tooltip => _resourceManager.GetString("PerPlatformMaxStructuresMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string OverrideStructurePlatformPrevention => _resourceManager.GetString("OverrideStructurePlatformPrevention", CultureInfo.CurrentCulture);
        public string OverrideStructurePlatformPrevention_Tooltip => _resourceManager.GetString("OverrideStructurePlatformPrevention_Tooltip", CultureInfo.CurrentCulture);
        public string FlyerPlatformAllowUnalignedDinoBasing => _resourceManager.GetString("FlyerPlatformAllowUnalignedDinoBasing", CultureInfo.CurrentCulture);
        public string FlyerPlatformAllowUnalignedDinoBasing_Tooltip => _resourceManager.GetString("FlyerPlatformAllowUnalignedDinoBasing_Tooltip", CultureInfo.CurrentCulture);
        public string PvEAllowStructuresAtSupplyDrops => _resourceManager.GetString("PvEAllowStructuresAtSupplyDrops", CultureInfo.CurrentCulture);
        public string PvEAllowStructuresAtSupplyDrops_Tooltip => _resourceManager.GetString("PvEAllowStructuresAtSupplyDrops_Tooltip", CultureInfo.CurrentCulture);
        public string AutoDestroyStructures => _resourceManager.GetString("AutoDestroyStructures", CultureInfo.CurrentCulture);
        public string AutoDestroyStructures_Tooltip => _resourceManager.GetString("AutoDestroyStructures_Tooltip", CultureInfo.CurrentCulture);
        public string PvEStructureDecayPeriodMultiplier => _resourceManager.GetString("PvEStructureDecayPeriodMultiplier", CultureInfo.CurrentCulture);
        public string PvEStructureDecayPeriodMultiplier_Tooltip => _resourceManager.GetString("PvEStructureDecayPeriodMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string AutoDestroyOldStructuresMultiplier => _resourceManager.GetString("AutoDestroyOldStructuresMultiplier", CultureInfo.CurrentCulture);
        public string AutoDestroyOldStructuresMultiplier_Tooltip => _resourceManager.GetString("AutoDestroyOldStructuresMultiplier_Tooltip", CultureInfo.CurrentCulture);
        public string ForceAllStructureLocking => _resourceManager.GetString("ForceAllStructureLocking", CultureInfo.CurrentCulture);
        public string ForceAllStructureLocking_Tooltip => _resourceManager.GetString("ForceAllStructureLocking_Tooltip", CultureInfo.CurrentCulture);
        public string PassiveDefensesDamageRiderlessDinos => _resourceManager.GetString("PassiveDefensesDamageRiderlessDinos", CultureInfo.CurrentCulture);
        public string PassiveDefensesDamageRiderlessDinos_Tooltip => _resourceManager.GetString("PassiveDefensesDamageRiderlessDinos_Tooltip", CultureInfo.CurrentCulture);
        public string HardLimitTurretsInRange => _resourceManager.GetString("HardLimitTurretsInRange", CultureInfo.CurrentCulture);
        public string HardLimitTurretsInRange_Tooltip => _resourceManager.GetString("HardLimitTurretsInRange_Tooltip", CultureInfo.CurrentCulture);
        public string LimitTurretsNum => _resourceManager.GetString("LimitTurretsNum", CultureInfo.CurrentCulture);
        public string LimitTurretsNum_Tooltip => _resourceManager.GetString("LimitTurretsNum_Tooltip", CultureInfo.CurrentCulture);
        public string LimitTurretsRange => _resourceManager.GetString("LimitTurretsRange", CultureInfo.CurrentCulture);
        public string LimitTurretsRange_Tooltip => _resourceManager.GetString("LimitTurretsRange_Tooltip", CultureInfo.CurrentCulture);
        public string AlwaysAllowStructurePickup => _resourceManager.GetString("AlwaysAllowStructurePickup", CultureInfo.CurrentCulture);
        public string AlwaysAllowStructurePickup_Tooltip => _resourceManager.GetString("AlwaysAllowStructurePickup_Tooltip", CultureInfo.CurrentCulture);
        public string StructurePickupTimeAfterPlacement => _resourceManager.GetString("StructurePickupTimeAfterPlacement", CultureInfo.CurrentCulture);
        public string StructurePickupTimeAfterPlacement_Tooltip => _resourceManager.GetString("StructurePickupTimeAfterPlacement_Tooltip", CultureInfo.CurrentCulture);
        public string StructurePickupHoldDuration => _resourceManager.GetString("StructurePickupHoldDuration", CultureInfo.CurrentCulture);
        public string StructurePickupHoldDuration_Tooltip => _resourceManager.GetString("StructurePickupHoldDuration_Tooltip", CultureInfo.CurrentCulture);
        public string Engrams => _resourceManager.GetString("Engrams", CultureInfo.CurrentCulture);
        public string SaveEngrams => _resourceManager.GetString("SaveEngrams", CultureInfo.CurrentCulture);
        public string EngramClassName => _resourceManager.GetString("EngramClassName", CultureInfo.CurrentCulture);
        public string Hidden => _resourceManager.GetString("Hidden", CultureInfo.CurrentCulture);
        public string PointsCost => _resourceManager.GetString("PointsCost", CultureInfo.CurrentCulture);
        public string LevelRequirement => _resourceManager.GetString("LevelRequirement", CultureInfo.CurrentCulture);
        public string AutoUnlock => _resourceManager.GetString("AutoUnlock", CultureInfo.CurrentCulture);
        public string LevelToAutoUnlock => _resourceManager.GetString("LevelToAutoUnlock", CultureInfo.CurrentCulture);
        public string HostedFiles => _resourceManager.GetString("HostedFiles", CultureInfo.CurrentCulture);
        public string StackSizeOverrides => _resourceManager.GetString("StackSizeOverrides", CultureInfo.CurrentCulture);
        public string AddRow => _resourceManager.GetString("AddRow", CultureInfo.CurrentCulture);
        public string PasteItems => _resourceManager.GetString("PasteItems", CultureInfo.CurrentCulture);
        public string SaveConfig => _resourceManager.GetString("SaveConfig", CultureInfo.CurrentCulture);
        public string Remove => _resourceManager.GetString("Remove", CultureInfo.CurrentCulture);
        public string ItemClassString => _resourceManager.GetString("ItemClassString", CultureInfo.CurrentCulture);
        public string MaxItemQuantity => _resourceManager.GetString("MaxItemQuantity", CultureInfo.CurrentCulture);
        public string IgnoreMultiplier => _resourceManager.GetString("IgnoreMultiplier", CultureInfo.CurrentCulture);
        public string DinoOverrides => _resourceManager.GetString("DinoOverrides", CultureInfo.CurrentCulture);
        public string AddDinoOverride => _resourceManager.GetString("AddDinoOverride", CultureInfo.CurrentCulture);
        public string CraftingOverrides => _resourceManager.GetString("CraftingOverrides", CultureInfo.CurrentCulture);
        public string LootOverrides => _resourceManager.GetString("LootOverrides", CultureInfo.CurrentCulture);
        public string SOTFSettings => _resourceManager.GetString("SOTFSettings", CultureInfo.CurrentCulture);
        public string BattleNumOfTribestoStartGame => _resourceManager.GetString("BattleNumOfTribestoStartGame", CultureInfo.CurrentCulture);
        public string TimeToCollapseROD => _resourceManager.GetString("TimeToCollapseROD", CultureInfo.CurrentCulture);
        public string BattleAutoStartGameInterval => _resourceManager.GetString("BattleAutoStartGameInterval", CultureInfo.CurrentCulture);
        public string BattleSuddenDeathInterval => _resourceManager.GetString("BattleSuddenDeathInterval", CultureInfo.CurrentCulture);
        public string KickIdlePlayersPeriod => _resourceManager.GetString("KickIdlePlayersPeriod", CultureInfo.CurrentCulture);
        public string CustomGameIni => _resourceManager.GetString("CustomGameIni", CultureInfo.CurrentCulture);
        public string PasteGameIniContent => _resourceManager.GetString("PasteGameIniContent", CultureInfo.CurrentCulture);
        public string SaveToGameIni => _resourceManager.GetString("SaveToGameIni", CultureInfo.CurrentCulture);
        public string CustomGameUserSettingsIni => _resourceManager.GetString("CustomGameUserSettingsIni", CultureInfo.CurrentCulture);
        public string Save => _resourceManager.GetString("Save", CultureInfo.CurrentCulture);

        public string LaunchParameters => _resourceManager.GetString("LaunchParameters", CultureInfo.CurrentCulture);
        public string SaveLaunchParameters => _resourceManager.GetString("SaveLaunchParameters", CultureInfo.CurrentCulture);
        public string ServerPlatformSetting => _resourceManager.GetString("ServerPlatformSetting", CultureInfo.CurrentCulture);
        public string ServerPlatformSettingTooltip => _resourceManager.GetString("ServerPlatformSettingTooltip", CultureInfo.CurrentCulture);
        public string CommandLine => _resourceManager.GetString("CommandLine", CultureInfo.CurrentCulture);
        public string OfficialMapSelection => _resourceManager.GetString("OfficialMapSelection", CultureInfo.CurrentCulture);
        public string OverrideMapName => _resourceManager.GetString("OverrideMapName", CultureInfo.CurrentCulture);
        public string OverrideMapNameTooltip => _resourceManager.GetString("OverrideMapNameTooltip", CultureInfo.CurrentCulture);
        public string OverrideMapNameInputTooltip => _resourceManager.GetString("OverrideMapNameInputTooltip", CultureInfo.CurrentCulture);
        public string ListenPort => _resourceManager.GetString("ListenPort", CultureInfo.CurrentCulture);
        public string Mods => _resourceManager.GetString("Mods", CultureInfo.CurrentCulture);
        public string AddPassiveMod => _resourceManager.GetString("AddPassiveMod", CultureInfo.CurrentCulture);
        public string AddPassiveModTooltip => _resourceManager.GetString("AddPassiveModTooltip", CultureInfo.CurrentCulture);
        public string OverridePassiveModTooltip => _resourceManager.GetString("OverridePassiveModTooltip", CultureInfo.CurrentCulture);
        public string MaxPlayerCount => _resourceManager.GetString("MaxPlayerCount", CultureInfo.CurrentCulture);
        public string UseBattleye => _resourceManager.GetString("UseBattleye", CultureInfo.CurrentCulture);
        public string UseOldConsole => _resourceManager.GetString("UseOldConsole", CultureInfo.CurrentCulture);
        public string UseOldConsoleTooltip => _resourceManager.GetString("UseOldConsoleTooltip", CultureInfo.CurrentCulture);
        public string DisableCustomCosmetics => _resourceManager.GetString("DisableCustomCosmetics", CultureInfo.CurrentCulture);
        public string DisableCustomCosmeticsTooltip => _resourceManager.GetString("DisableCustomCosmeticsTooltip", CultureInfo.CurrentCulture);
        public string AutoDestroyStructuresTooltip => _resourceManager.GetString("AutoDestroyStructuresTooltip", CultureInfo.CurrentCulture);
        public string NotifyAdminCommandsInChat => _resourceManager.GetString("NotifyAdminCommandsInChat", CultureInfo.CurrentCulture);
        public string NotifyAdminCommandsInChatTooltip => _resourceManager.GetString("NotifyAdminCommandsInChatTooltip", CultureInfo.CurrentCulture);
        public string ForceRespawnDinos => _resourceManager.GetString("ForceRespawnDinos", CultureInfo.CurrentCulture);
        public string CustomLaunchOptions => _resourceManager.GetString("CustomLaunchOptions", CultureInfo.CurrentCulture);
        public string CustomLaunchOptionsTooltip => _resourceManager.GetString("CustomLaunchOptionsTooltip", CultureInfo.CurrentCulture);
        public string ClusterID => _resourceManager.GetString("ClusterID", CultureInfo.CurrentCulture);
        public string ClusterIDTooltip => _resourceManager.GetString("ClusterIDTooltip", CultureInfo.CurrentCulture);
        public string ClusterDirOverride => _resourceManager.GetString("ClusterDirOverride", CultureInfo.CurrentCulture);
        public string ClusterDirOverrideTooltip => _resourceManager.GetString("ClusterDirOverrideTooltip", CultureInfo.CurrentCulture);
        public string EnablePlugins => _resourceManager.GetString("EnablePlugins", CultureInfo.CurrentCulture);
        public string MultihomeIP => _resourceManager.GetString("MultihomeIP", CultureInfo.CurrentCulture);
        public string MultihomeIPTooltip => _resourceManager.GetString("MultihomeIPTooltip", CultureInfo.CurrentCulture);
        public string ServerIP => _resourceManager.GetString("ServerIP", CultureInfo.CurrentCulture);
        public string ServerIPTooltip => _resourceManager.GetString("ServerIPTooltip", CultureInfo.CurrentCulture);
        public string CreateEditSchedule => _resourceManager.GetString("CreateEditSchedule", CultureInfo.CurrentCulture);
        public string ScheduleNickname => _resourceManager.GetString("ScheduleNickname", CultureInfo.CurrentCulture);
        public string Action => _resourceManager.GetString("Action", CultureInfo.CurrentCulture);
        public string Shutdown => _resourceManager.GetString("Shutdown", CultureInfo.CurrentCulture);
        public string Restart => _resourceManager.GetString("Restart", CultureInfo.CurrentCulture);
        public string CustomRCONCommand => _resourceManager.GetString("CustomRCONCommand", CultureInfo.CurrentCulture);

        public string RCONCommand => _resourceManager.GetString("RCONCommand", CultureInfo.CurrentCulture);
        public string SelectServer => _resourceManager.GetString("SelectServer", CultureInfo.CurrentCulture);
        public string SelectTimes => _resourceManager.GetString("SelectTimes", CultureInfo.CurrentCulture);
        public string AddTime => _resourceManager.GetString("AddTime", CultureInfo.CurrentCulture);
        public string ReoccursEvery => _resourceManager.GetString("ReoccursEvery", CultureInfo.CurrentCulture);
        public string Minutes => _resourceManager.GetString("Minutes", CultureInfo.CurrentCulture);
        public string Hours => _resourceManager.GetString("Hours", CultureInfo.CurrentCulture);

        public string SelectDays => _resourceManager.GetString("SelectDays", CultureInfo.CurrentCulture);
        public string Monday => _resourceManager.GetString("Monday", CultureInfo.CurrentCulture);
        public string Tuesday => _resourceManager.GetString("Tuesday", CultureInfo.CurrentCulture);
        public string Wednesday => _resourceManager.GetString("Wednesday", CultureInfo.CurrentCulture);
        public string Thursday => _resourceManager.GetString("Thursday", CultureInfo.CurrentCulture);
        public string Friday => _resourceManager.GetString("Friday", CultureInfo.CurrentCulture);
        public string Saturday => _resourceManager.GetString("Saturday", CultureInfo.CurrentCulture);
        public string Sunday => _resourceManager.GetString("Sunday", CultureInfo.CurrentCulture);
        public string ExistingSchedules => _resourceManager.GetString("ExistingSchedules", CultureInfo.CurrentCulture);
        public string SearchBar => _resourceManager.GetString("SearchBar", CultureInfo.CurrentCulture);
        public string Id => _resourceManager.GetString("Id", CultureInfo.CurrentCulture);
        public string Nickname => _resourceManager.GetString("Nickname", CultureInfo.CurrentCulture);
        public string Times => _resourceManager.GetString("Times", CultureInfo.CurrentCulture);
        public string Days => _resourceManager.GetString("Days", CultureInfo.CurrentCulture);
        public string ReoccurrenceIntervalType => _resourceManager.GetString("ReoccurrenceIntervalType", CultureInfo.CurrentCulture);
        public string ReoccurrenceInterval => _resourceManager.GetString("ReoccurrenceInterval", CultureInfo.CurrentCulture);
        public string Server => _resourceManager.GetString("Server", CultureInfo.CurrentCulture);
        public string EditButton => _resourceManager.GetString("EditButton", CultureInfo.CurrentCulture);
        public string Delete => _resourceManager.GetString("Delete", CultureInfo.CurrentCulture);
        public string Previous => _resourceManager.GetString("Previous", CultureInfo.CurrentCulture);
        public string Next => _resourceManager.GetString("Next", CultureInfo.CurrentCulture);
        public string ProfileName => _resourceManager.GetString("ProfileName", CultureInfo.CurrentCulture);
        public string ServerPath => _resourceManager.GetString("ServerPath", CultureInfo.CurrentCulture);
        public string Browse => _resourceManager.GetString("Browse", CultureInfo.CurrentCulture);
        public string SelectMap => _resourceManager.GetString("SelectMap", CultureInfo.CurrentCulture);
        public string RCONPort => _resourceManager.GetString("RCONPort", CultureInfo.CurrentCulture);
        public string PreventSpawnAnimation => _resourceManager.GetString("PreventSpawnAnimation", CultureInfo.CurrentCulture);
        public string CreateServer => _resourceManager.GetString("CreateServer", CultureInfo.CurrentCulture);
        public string ImportServer => _resourceManager.GetString("ImportServer", CultureInfo.CurrentCulture);
        public string DiscordBotSettings => _resourceManager.GetString("DiscordBotSettings", CultureInfo.CurrentCulture);
        public string DiscordBotToken => _resourceManager.GetString("DiscordBotToken", CultureInfo.CurrentCulture);
        public string LoggerWebhookUrl => _resourceManager.GetString("LoggerWebhookUrl", CultureInfo.CurrentCulture);
        public string GuildID => _resourceManager.GetString("GuildID", CultureInfo.CurrentCulture);
        public string AuthorizedRoles => _resourceManager.GetString("AuthorizedRoles", CultureInfo.CurrentCulture);
        public string CrossChatWebhook => _resourceManager.GetString("CrossChatWebhook", CultureInfo.CurrentCulture);
        public string IgnoreMessages => _resourceManager.GetString("IgnoreMessages", CultureInfo.CurrentCulture);
        public string EnableVerboseLogging => _resourceManager.GetString("EnableVerboseLogging", CultureInfo.CurrentCulture);
        public string DiscordActions => _resourceManager.GetString("DiscordActions", CultureInfo.CurrentCulture);
        public string SaveDiscordInfo => _resourceManager.GetString("SaveDiscordInfo", CultureInfo.CurrentCulture);
        public string StartBot => _resourceManager.GetString("StartBot", CultureInfo.CurrentCulture);
        public string StopBot => _resourceManager.GetString("StopBot", CultureInfo.CurrentCulture);
        public string BotStatus => _resourceManager.GetString("BotStatus", CultureInfo.CurrentCulture);
        public string IssueTitle => _resourceManager.GetString("IssueTitle", CultureInfo.CurrentCulture);
        public string DiscordUsername => _resourceManager.GetString("DiscordUsername", CultureInfo.CurrentCulture);
        public string IssueDescription => _resourceManager.GetString("IssueDescription", CultureInfo.CurrentCulture);
        public string AttachmentLink => _resourceManager.GetString("AttachmentLink", CultureInfo.CurrentCulture);
        public string AdditionalInformation => _resourceManager.GetString("AdditionalInformation", CultureInfo.CurrentCulture);
        public string Submit => _resourceManager.GetString("Submit", CultureInfo.CurrentCulture);
        public string RestoreSelectedBackup => _resourceManager.GetString("RestoreSelectedBackup", CultureInfo.CurrentCulture);
        public string SelectBackup => _resourceManager.GetString("SelectBackup", CultureInfo.CurrentCulture);
        public string SyncServers => _resourceManager.GetString("SyncServers", CultureInfo.CurrentCulture);
        public string ImportServers => _resourceManager.GetString("ImportServers", CultureInfo.CurrentCulture);
        public string UpdateAllServers => _resourceManager.GetString("UpdateAllServers", CultureInfo.CurrentCulture);
        public string StopAllServers => _resourceManager.GetString("StopAllServers", CultureInfo.CurrentCulture);
        public string StartAllServers => _resourceManager.GetString("StartAllServers", CultureInfo.CurrentCulture);
        public string StartServerTooltip => _resourceManager.GetString("StartServerTooltip", CultureInfo.CurrentCulture);
        public string RestartServerTooltip => _resourceManager.GetString("RestartServerTooltip", CultureInfo.CurrentCulture);
        public string StopServerTooltip => _resourceManager.GetString("StopServerTooltip", CultureInfo.CurrentCulture);
        public string UpdateServerTooltip => _resourceManager.GetString("UpdateServerTooltip", CultureInfo.CurrentCulture);
        public string ReportIssue => _resourceManager.GetString("ReportIssue", CultureInfo.CurrentCulture);
        public string FixServerVersion => _resourceManager.GetString("FixServerVersion", CultureInfo.CurrentCulture);
        public string UpdateAAM => _resourceManager.GetString("UpdateAAM", CultureInfo.CurrentCulture);
        public string OpenAppData => _resourceManager.GetString("OpenAppData", CultureInfo.CurrentCulture);
        public string Version => _resourceManager.GetString("Version", CultureInfo.CurrentCulture);
        public string ReleaseNotes => _resourceManager.GetString("ReleaseNotes", CultureInfo.CurrentCulture);
        public string ManagerSettings => _resourceManager.GetString("ManagerSettings", CultureInfo.CurrentCulture);
        public string AutoUpdateServersOnReboot => _resourceManager.GetString("AutoUpdateServersOnReboot", CultureInfo.CurrentCulture);
        public string AutoUpdateServersWhenNewUpdateAvailable => _resourceManager.GetString("AutoUpdateServersWhenNewUpdateAvailable", CultureInfo.CurrentCulture);
        public string UpdateCountdownTimer => _resourceManager.GetString("UpdateCountdownTimer", CultureInfo.CurrentCulture);
        public string UpdateIntervalTimer => _resourceManager.GetString("UpdateIntervalTimer", CultureInfo.CurrentCulture);
        public string Personalization => _resourceManager.GetString("Personalization", CultureInfo.CurrentCulture);
        public string Theme => _resourceManager.GetString("Theme", CultureInfo.CurrentCulture);
        public string LightTheme => _resourceManager.GetString("LightTheme", CultureInfo.CurrentCulture);
        public string DarkTheme => _resourceManager.GetString("DarkTheme", CultureInfo.CurrentCulture);
        public string LanguageSettings => _resourceManager.GetString("LanguageSettings", CultureInfo.CurrentCulture);
        public string SelectLanguage => _resourceManager.GetString("SelectLanguage", CultureInfo.CurrentCulture);
        public string UploadEngramData => _resourceManager.GetString("UploadEngramData", CultureInfo.CurrentCulture);
        public string FileName => _resourceManager.GetString("FileName", CultureInfo.CurrentCulture);
        public string Servers => _resourceManager.GetString("Servers", CultureInfo.CurrentCulture);
        public string Source => _resourceManager.GetString("Source", CultureInfo.CurrentCulture);
        public string Targets => _resourceManager.GetString("Targets", CultureInfo.CurrentCulture);
        public string Sync => _resourceManager.GetString("Sync", CultureInfo.CurrentCulture);
        public string EditCommandWindowTitle => _resourceManager.GetString("EditCommandWindowTitle", CultureInfo.CurrentCulture);
        public string Cancel => _resourceManager.GetString("Cancel", CultureInfo.CurrentCulture);
        public string RconWindowTitle => _resourceManager.GetString("RconWindowTitle", CultureInfo.CurrentCulture);
        public string TabControlBackground => _resourceManager.GetString("TabControlBackground", CultureInfo.CurrentCulture);
        public string CloseButtonText => _resourceManager.GetString("CloseButtonText", CultureInfo.CurrentCulture);
        public string IsSelectedBackground => _resourceManager.GetString("IsSelectedBackground", CultureInfo.CurrentCulture);
        public string IsMouseOverBackground => _resourceManager.GetString("IsMouseOverBackground", CultureInfo.CurrentCulture);
        public string TabItemBackground => _resourceManager.GetString("TabItemBackground", CultureInfo.CurrentCulture);
        public string TabItemForeground => _resourceManager.GetString("TabItemForeground", CultureInfo.CurrentCulture);
        public string CloseButtonForeground => _resourceManager.GetString("CloseButtonForeground", CultureInfo.CurrentCulture);
        public string CloseButtonMouseOverForeground => _resourceManager.GetString("CloseButtonMouseOverForeground", CultureInfo.CurrentCulture);
        public string ApplicationTitle => _resourceManager.GetString("ApplicationTitle", CultureInfo.CurrentCulture);
        public string Home => _resourceManager.GetString("Home", CultureInfo.CurrentCulture);
        public string Integrations => _resourceManager.GetString("Integrations", CultureInfo.CurrentCulture);
        public string Tasks => _resourceManager.GetString("Tasks", CultureInfo.CurrentCulture);
        public string Settings => _resourceManager.GetString("Settings", CultureInfo.CurrentCulture);

        public string Plugins => _resourceManager.GetString("Plugins", CultureInfo.CurrentCulture);


    }
}
